// Code generated by optiongen. DO NOT EDIT.
// optiongen: github.com/timestee/optiongen

package conf

type Options struct {
	Port      int
	KeepAlive bool
	Debug     bool
}

func (cc *Options) SetOption(opt Option) {
	_ = opt(cc)
}

func (cc *Options) ApplyOption(opts ...Option) {
	for _, opt := range opts {
		_ = opt(cc)
	}
}

func (cc *Options) GetSetOption(opt Option) Option {
	return opt(cc)
}

type Option func(cc *Options) Option

func WithPort(v int) Option {
	return func(cc *Options) Option {
		previous := cc.Port
		cc.Port = v
		return WithPort(previous)
	}
}

func WithKeepAlive(v bool) Option {
	return func(cc *Options) Option {
		previous := cc.KeepAlive
		cc.KeepAlive = v
		return WithKeepAlive(previous)
	}
}

func WithDebug(v bool) Option {
	return func(cc *Options) Option {
		previous := cc.Debug
		cc.Debug = v
		return WithDebug(previous)
	}
}

func NewOptions(opts ...Option) *Options {
	cc := newDefaultOptions()

	for _, opt := range opts {
		_ = opt(cc)
	}
	if watchDogOptions != nil {
		watchDogOptions(cc)
	}
	return cc
}

func InstallOptionsWatchDog(dog func(cc *Options)) {
	watchDogOptions = dog
}

var watchDogOptions func(cc *Options)

func newDefaultOptions() *Options {

	cc := &Options{}

	for _, opt := range [...]Option{
		WithPort(8080),
		WithKeepAlive(true),
		WithDebug(false),
	} {
		_ = opt(cc)
	}

	return cc
}
